from itertools import count, islice, cycle
"""
6. Реализовать два небольших скрипта:
а) итератор, генерирующий целые числа, начиная с указанного,
б) итератор, повторяющий элементы некоторого списка, определенного заранее.

Подсказка: использовать функцию count() и cycle() модуля itertools. Обратите внимание, что создаваемый цикл не должен
быть бесконечным. Необходимо предусмотреть условие его завершения.

Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл. Во втором
также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
"""


def count_iter():
    """генерирует список с помощью функции count() начиная с 1 с шагом 3"""

    count_list = []
    for n in islice(count(1, 3), 5):  # прерываем цикл через 5 итераций
        count_list.append(n)
    return count_list


def cycle_iter(some_list):
    """генерирует список из значений списка из функции count_iter() выше"""

    cycle_list = []
    for item in islice(cycle(some_list), 10):  # прерываем цикл при добавлении 10 значений
        cycle_list.append(item)
    return cycle_list


print(count_iter())

print(cycle_iter(count_iter()))
