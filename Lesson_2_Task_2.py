"""Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы
с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input()."""

# назначаем позиции для принудительного добавления в новый список по индексу для применения в циклах далее
position1 = 1
position2 = 0
new_list = []

# получаем от пользователя строку элементов и преобразуем в список
source_list = input('\nВведите элементы для заполнения списка: ')

# защита от поломки, в зависимости от того если пользователь ввел элементы с пробелами или без
if source_list.count(' ') != 0:
    # применяем сплит для корректного разделения элементов пользователя, из 12 34 получим ['12', '34']
    source_list = source_list.split()

    # чтобы избежать ошибки IndexError выполняем цикл пока наибольшая позиция не превысит длинну списка
    while position1 < len(source_list):
        new_list.append(source_list[position1])
        new_list.append(source_list[position2])

        # сдвигаем индексы на 2 при каждой итерации т.к. требуется обмен двух соседних элементов
        position1 += 2
        position2 += 2

    # если количество элементов нечетное, цикл while остановится не добавив последний элемент. Его добавляем отдельно
    if position1 == len(source_list):
        new_list.append(source_list[position1 - 1])

    print()
    print('Получен следующий результат обмена значений соседних элементов:')
    print(new_list)
else:
    # применяем лист если пользователь ввел все сплошной строкой и из 123 получаем ['1', '2', '3']
    source_list = list(source_list)

    # чтобы избежать ошибки IndexError выполняем цикл пока наибольшая позиция не превысит длинну списка
    while position1 < len(source_list):
        new_list.append(source_list[position1])
        new_list.append(source_list[position2])

        # сдвигаем индексы на 2 при каждой итерации т.к. требуется обмен двух соседних элементов
        position1 += 2
        position2 += 2

    # если количество элементов нечетное, цикл while остановится не добавив последний элемент. Его добавляем отдельно
    if position1 == len(source_list):
        new_list.append(source_list[position1 - 1])

    print()
    print('Получен следующий результат обмена значений соседних элементов:')
    print(new_list)
