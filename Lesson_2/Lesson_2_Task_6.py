"""*Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента —
номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[
    (1, {'название' 'компьютер' 'цена' 20000, 'количество' 5, 'eд' 'шт.'),
    (2, {'название' 'принтер' 'цена' 6000, 'количество' 2, 'eд' 'шт.'),
    (3, {'название' 'сканер' 'цена' 2000, 'количество' 7, 'eд' 'шт.')
]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{
    'название' ['компьютер' 'принтер' 'сканер',
    'цена' [20000, 6000, 2000],
    'количество' [5, 2, 7],
    'ед' ['шт.'
}"""

# то что хранится на складе
stock = [
    (1, {'Название': 'компьютер', 'Цена': 20000, 'Количество': 5, 'ед': 'шт.'}),
    (2, {'Название': 'принтер', 'Цена': 6000, 'Количество': 2, 'ед': 'шт.'}),
    (3, {'Название': 'сканер', 'Цена': 2000, 'Количество': 7, 'ед': 'шт.'})
]

# словарь с характеристиками вложен в кортеж с номером по порядку и вложен в список сток
item = {'Название': '', 'Цена': '', 'Количество': '', 'ед': ''}

# запрос действия
print(f'Для продолжения выбирите действие. \n\n'
      f'       ЧТОБЫ            ВВЕДИТЕ: \n'
      f'{("-" * 35)}\n'
      '- добавить новый товар   ТОВАР\n'
      '- посмотреть остатки     СТОК\n'
      '- посмотреть аналитику   АНАЛИТИКА\n'
      '- выйти из программы     СТОП')

key_storage = item.keys()  # список ключей в кортежах со словарями

while True:  # работаем пока пользователь не наберет СТОП
    do = input('\nВыбирите действие: ')
    if do.upper() == 'СТОП':  # выход из программы
        break

    elif do.upper() == 'ТОВАР':
        """добавить товар в сток"""
        while True:
            one_more_item = None
            for i in key_storage:  # заполняем данные товара через поочередную замену элементов словаря item
                new_item = input(f'{i}: ')
                item[i] = new_item
            one_more_item = input('Требуется ли ввести еще товар? Да/Нет: ')

            # создать кортеж с номером и айтемом, добавляем новый товар в кортеж со следующим порядковым номером
            item_num = 3
            stock.append((item_num + 1, item))
            print(f'Вы добавили: {item["Название"]} - {item["Цена"]} - {item["Количество"]} - {item["ед"]}')
            if one_more_item.lower() == 'да':
                continue
            else:
                break

    elif do.upper() == 'АНАЛИТИКА':
        """посмотр аналитики"""
        name = []
        price = []
        quantity = []
        measure = []
        elem_count = 0
        for elem in stock:  # перебираем кортежи в stock
            for k in key_storage:  # перебираем ключи словаря в кортежах в stock
                if k == 'Название':
                    a = elem[1]
                    name.append(a[k])
                elif k == 'Цена':
                    a = elem[1]
                    price.append(a[k])
                elif k == 'Количество':
                    a = elem[1]
                    quantity.append(a[k])
                elif k == 'ед':
                    a = elem[1]
                    measure.append(a[k])
        print(f'Название {name}\nЦена {price}\nКоличество {quantity}\nЕдиницыс{measure}')
        break

    elif do.upper() == 'СТОК':
        """посмотреть остатки"""
        print()
        for num, elem in enumerate(stock, 1):  # перебираем кортежи в stock
            a = elem[1]
            print(f'{num:02.0f}. {a["Название"]} - {a["Цена"]} - {a["Количество"]} - {a["ед"]}')
