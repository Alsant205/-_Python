from time import sleep
import turtle as ttl

"""1. Создать класс TrafficLight (светофор) и определить у него один атрибут color (цвет) и метод running (запуск).
Атрибут реализовать как приватный. В рамках метода реализовать переключение светофора в режимы: красный, желтый,
зеленый. Продолжительность первого состояния (красный) составляет 7 секунд, второго (желтый) — 2 секунды,
третьего (зеленый) — на ваше усмотрение. Переключение между режимами должно осуществляться только в указанном порядке
(красный, желтый, зеленый). Проверить работу примера, создав экземпляр и вызвав описанный метод.

Задачу можно усложнить, реализовав проверку порядка режимов, и при его нарушении выводить соответствующее сообщение и
завершать скрипт."""


class TrafficLight:
    __color = ('red', 'yellow', 'green')

    def __init__(self):  # конструктор
        ttl.speed(0)  # максимальная скорость для создания светофора
        ttl.ht()  # скрываем курсор чтобы не портил картинку
        ttl.bgcolor('LightYellow2')  # задаем фон
        ttl.up()  # поднимаем перо чтобы не чертило при переносе фокуса
        # задаем координаты и цвет потушенного красного
        ttl.setpos(0.0, 200.0)
        ttl.dot(195, 'Tomato4')
        # задаем координаты и цвет потушенного желтого
        ttl.setpos(0.0, 0.0)
        ttl.dot(195, 'Yellow4')
        # задаем координаты и цвет потушенного зеленого
        ttl.setpos(0.0, -200.0)
        ttl.dot(195, 'PaleGreen4')
        # после отрисовки объекта возвращаем на позицию красного для включения первого сигнала красного цвета
        ttl.setpos(0.0, 200.0)

    def running(self, color):  # управление переключениями светофора
        if color == 'red':
            ttl.dot(195, color)
            ##
            # отображение обратного отсчета до следующего переключения (при включении закоментировать sleep())
            timer = 7
            self.timer(timer)
            ##
            # sleep(7)  # раскоментировать в случае отключения отображения счетчика выше
            ##
            ttl.setpos(0.0, 200.0)
            ttl.dot(195, 'Tomato4')
            ttl.setpos(0.0, 0.0)
        elif color == 'yellow':
            ttl.dot(195, 'Orange')
            sleep(2)
            ttl.dot(195, 'Yellow4')
            ttl.setpos(0.0, -200.0)
        elif color == 'green':
            ttl.dot(195, 'LimeGreen')
            ##
            # отображение обратного отсчета до следующего переключения (при включении закоментировать sleep())
            timer = 5
            self.timer(timer)
            ##
            # sleep(5)  # раскоментировать в случае отключения отображения счетчика
            ##
            ttl.setpos(0.0, -200.0)
            ttl.dot(195, 'PaleGreen4')
            ttl.setpos(0.0, 200.0)

    def timer(self, timer):  # отображение обратного отсчета до переключения сигнала
        for i in range(timer, 0, -1):
            ttl.setpos(0.0, -100.0)
            ttl.write(i, move=False, align="center", font=("Arial", 180, "normal"))
            sleep(1)
            ttl.undo()


tl = TrafficLight()
while True:
    for c in tl._TrafficLight__color:  # перебираем цвета заданные в классе для поочередного включения цветов
        tl.running(c)
